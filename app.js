let currentJoke = '';
let usedJokes = new Set();

function getRandomJoke() {
    const jokeText = document.getElementById('joke-text');
    const jokeBtn = document.getElementById('joke-btn');
    const shareBtn = document.getElementById('share-btn');
    
    // Add loading state
    jokeBtn.textContent = 'Getting joke...';
    jokeBtn.classList.add('loading');
    jokeBtn.disabled = true;
    
    // Reset used jokes if we've used them all
    if (usedJokes.size >= jokes.length) {
        usedJokes.clear();
    }
    
    // Get a random joke that hasn't been used recently
    let randomJoke;
    do {
        const randomIndex = Math.floor(Math.random() * jokes.length);
        randomJoke = jokes[randomIndex];
    } while (usedJokes.has(randomJoke) && usedJokes.size < jokes.length);
    
    // Add to used jokes
    usedJokes.add(randomJoke);
    currentJoke = randomJoke;
    
    // Simulate a small delay for better UX
    setTimeout(() => {
        jokeText.textContent = randomJoke;
        jokeBtn.textContent = 'Get Another Joke ðŸ˜„';
        jokeBtn.classList.remove('loading');
        jokeBtn.disabled = false;
        shareBtn.style.display = 'inline-block';
        
        // Add a little animation
        jokeText.style.opacity = '0';
        setTimeout(() => {
            jokeText.style.transition = 'opacity 0.3s';
            jokeText.style.opacity = '1';
        }, 100);
    }, 500);
}

function shareJoke() {
    if (currentJoke) {
        // Try to use the Web Share API if available
        if (navigator.share) {
            navigator.share({
                title: 'Random Joke Generator',
                text: currentJoke,
                url: window.location.href
            }).catch(err => {
                console.log('Error sharing:', err);
                fallbackShare();
            });
        } else {
            fallbackShare();
        }
    }
}

function fallbackShare() {
    // Fallback: copy to clipboard
    if (navigator.clipboard && currentJoke) {
        navigator.clipboard.writeText(`${currentJoke} - Generated by Random Joke Frame`).then(() => {
            const shareBtn = document.getElementById('share-btn');
            const originalText = shareBtn.textContent;
            shareBtn.textContent = 'Copied! ðŸ“‹';
            shareBtn.style.background = '#28a745';
            
            setTimeout(() => {
                shareBtn.textContent = originalText;
                shareBtn.style.background = '';
            }, 2000);
        }).catch(err => {
            console.log('Could not copy text: ', err);
            // Final fallback: show an alert with the joke
            alert(`Here's your joke to share:\n\n"${currentJoke}"\n\n- Random Joke Frame`);
        });
    }
}

// Initialize the app
document.addEventListener('DOMContentLoaded', function() {
    // Add some interactive effects
    const container = document.querySelector('.container');
    
    // Add a subtle animation on load
    container.style.opacity = '0';
    container.style.transform = 'translateY(20px)';
    
    setTimeout(() => {
        container.style.transition = 'opacity 0.5s, transform 0.5s';
        container.style.opacity = '1';
        container.style.transform = 'translateY(0)';
    }, 100);
    
    // Add keyboard support
    document.addEventListener('keydown', function(event) {
        if (event.code === 'Space' || event.code === 'Enter') {
            event.preventDefault();
            getRandomJoke();
        }
    });
});

// Optional: Integrate with Farcaster MiniKit if available
if (typeof window !== 'undefined' && window.MiniKit) {
    console.log('MiniKit detected, integrating...');
    
    // You can add MiniKit specific functionality here
    window.MiniKit.ready(() => {
        console.log('MiniKit is ready!');
        // Add any MiniKit specific initialization
    });
}